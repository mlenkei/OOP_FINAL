package task_final_3;

// Для создания проекта калькулятора простых чисел в Java и применения архитектурных паттернов,
// можно использовать паттерн MVC (Model-View-Controller). 
// MVC является одним из самых популярных паттернов проектирования и предлагает разделение приложения 
// на три компонента: модель (Model), представление (View) и контроллер (Controller). 

// Модель (Model) отвечает за данные и логику приложения. Она будет содержать методы для проверки простоты
// числа и вычисления простых чисел в заданном диапазоне. 

// Представление (View) отвечает за отображение данных пользователю. В нашем случае, калькулятор простых 
// чисел может быть представлен в виде графического интерфейса или консольного приложения,
//  где пользователь будет вводить число или диапазон чисел.

// Контроллер (Controller) связывает модель и представление. Он получает данные от представления,
//  вызывает методы модели для их обработки и передает результат обратно в представление.
//  Контроллер также может обрабатывать дополнительные действия пользователя, такие как нажатие 
// кнопок или выбор опций.

// Пример кода для реализации калькулятора простых чисел с использованием паттерна MVC:

import java.util.ArrayList;
import java.util.List;

public class PrimeCalculator {
    public static boolean isPrime(int number) {
        if(number <= 1){
            return false;
        }
        for (int i = 2; i <= Math.sqrt(number); i++) {
            if (number % i == 0) {
                return false;
            }
        }
        return true;
    }
    public static List<Integer> calculatePrime(int start, int end) {
        List<Integer> primes = new ArrayList<>();
        for (int i = start; i <= end; i++) {
            if (isPrime(i)) {
                primes.add(i);
            }
        }
        return primes;
    }
}
